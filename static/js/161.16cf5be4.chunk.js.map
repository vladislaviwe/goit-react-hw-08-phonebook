{"version":3,"file":"static/js/161.16cf5be4.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","components/ContactsForm/FormStyled.js","components/ContactsForm/Form.jsx","components/ContactsList/ContactsListStyled.js","components/ContactsList/ContactsList.jsx","components/Filter/FilterStyled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPageStyled.js","components/Loader/LoaderStyled.js","components/Loader/Loader.jsx","pages/ContactsPage/ContactsPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = ({ contacts }) => contacts.items;\n\nexport const selectState = ({ contacts }) => ({ loading: contacts.loading, error: contacts.error });\n\nexport const selectFilteredContacts = (filter, contacts) => {\n    if (!filter) {\n        return contacts;\n    }\n    const normalizedFilter = filter.toLocaleLowerCase();\n    const filteredContacts = contacts.filter(({ name, number }) => {\n        const normalizedName = name.toLocaleLowerCase();\n        const result = normalizedName.includes(normalizedFilter) || number.includes(normalizedFilter);\n        return result;\n    })\n    return filteredContacts;\n}\n\nexport const selectNumberOfContacts = createSelector([selectContacts], (contacts) => {\n    return contacts.length;\n})","export const selectFilter = store => store.filter;","import styled from \"styled-components\";\n\nexport const FormBtn = styled.button`\n    cursor: pointer;\n    display: block;\n\n    width: 100px;\n    padding: 10px;\n    margin: 16px auto 0;\n`\nexport const LabelText = styled.p`\n    margin: 0;\n`\n\nexport const Input = styled.input`\n    border-radius: 5px;\n    opacity: 50%;\n\n\n    &:hover, &:focus {\n        opacity: 40%;\n        filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.3));\n    }\n`","import { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\n\nimport { LabelText, Input, FormBtn } from './FormStyled';\nimport { useState } from 'react';\n\n\nexport default function Form({onSubmit}) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const nameId = nanoid();\n    const numberId = nanoid();\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'number':\n                return setNumber(value);\n            default:\n                return;\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({name, number});\n        setName('');\n        setNumber('');\n    }\n\n  return (\n    <form onSubmit={handleSubmit}>\n        <label>\n            <LabelText>Name:</LabelText>\n            <Input\n                type=\"text\"\n                name=\"name\"\n                id={nameId}\n                value={name}\n                onChange={handleChange}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n            />\n        </label>\n        <label>\n            <LabelText>Number:</LabelText>\n            <Input\n                type=\"tel\"\n                name=\"number\"\n                id={numberId}\n                value={number}\n                onChange={handleChange}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n            />\n        </label>\n        <FormBtn type=\"submit\">Add contact</FormBtn>\n    </form>\n  )\n}\n\nForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n\n","import styled from \"styled-components\";\n\nexport const List = styled.ol`\n    padding: 0;\n`\n\nexport const ListItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &:not(:last-child) {\n        margin-bottom: 5px;\n    }\n`","import PropTypes from 'prop-types';\nimport { ListItem, List } from './ContactsListStyled';\n\nexport default function ContactList({ items, removeContact }) {\n    const elements = items.map(({ name, number, id }) => {\n        return (\n            <ListItem key={id}>\n                {name}: {number}\n                <button type=\"button\" onClick={() => removeContact(id)}>x</button>\n            </ListItem>\n        )\n    })\n\n    return (\n            <List>{elements}</List>\n    )\n}\n\nContactList.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.exact({\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired\n        })\n    ),\n    removeContact: PropTypes.func.isRequired,\n}","import styled from \"styled-components\";\n\nexport const LabelText = styled.p`\n    margin: 0;\n`\n\nexport const Input = styled.input`\n    border-radius: 5px;\n    opacity: 50%;\n\n\n    &:hover, &:focus {\n        opacity: 40%;\n        filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.3));\n    }\n`","import PropTypes from 'prop-types';\nimport { LabelText, Input } from './FilterStyled';\n\nexport default function Filter({ filter, handleChange }) {\n    return (\n        <label>\n            <LabelText>Find contacts by name:</LabelText>\n            <Input type=\"text\" name=\"filter\" value={filter} onChange={handleChange}/>\n        </label>\n    )\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    handleChange: PropTypes.func.isRequired\n}\n","import styled from \"styled-components\";\n\nexport const MainTitle = styled.h1`\n    margin: 0;\n    margin-bottom: 16px;\n`\n\nexport const SecondTitle = styled.h2`\n    margin-top: 30px;\n    margin-bottom: 16px;\n`","import styled from \"styled-components\"\n\nexport const LoaderContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    margin-top: 16px;\n`","import { Oval } from  'react-loader-spinner'\nimport { LoaderContainer } from './LoaderStyled'\n\nexport default function Loader() {\n  return (\n    <LoaderContainer>\n        <Oval\n            height={50}\n            width={50}\n            color=\"#f7f9f7\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            ariaLabel='oval-loading'\n            secondaryColor=\"#000000\"\n            strokeWidth={5}\n            strokeWidthSecondary={5}\n        />\n    </LoaderContainer>\n  )\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContacts, selectNumberOfContacts, selectState, selectFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { selectFilter } from 'redux/filter/filter-selectors';\nimport { fetchContacts, addContact, removeContact } from 'redux/contacts/contacts-operation';\nimport { setFilter } from 'redux/filter/filter-slice';\n\nimport Form from '../../components/ContactsForm/Form';\nimport ContactList from '../../components/ContactsList/ContactsList';\nimport Filter from '../../components/Filter/Filter';\n\nimport { MainTitle, SecondTitle } from './ContactsPageStyled';\nimport Loader from '../../components/Loader/Loader';\n\nexport default function ContactsPage() {\n    const contacts = useSelector(selectContacts);\n    const contactsCount = useSelector(selectNumberOfContacts);\n    const { loading } = useSelector(selectState);\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch])\n\n    const onAddContact = (contact) => {\n        const action = addContact(contact);\n        dispatch(action);\n    }\n\n    const onRemoveContact = (id) => {\n        const action = removeContact(id);\n        dispatch(action);\n    } \n\n    const handleChange = (e) => {\n        const { value } = e.target;\n        dispatch(setFilter(value));\n    }\n\n    const filteredContacts = selectFilteredContacts(filter, contacts);\n\n    return (\n        <>\n            <MainTitle>Phonebook</MainTitle>\n            <Form onSubmit={onAddContact}/>\n            <SecondTitle>Contacts</SecondTitle>\n            {loading && <Loader />}\n            {!loading && contacts.length > 0 && \n                <>\n                    <Filter filter={filter} handleChange={handleChange}/>\n                    <p><b>You have {contactsCount} contacts</b></p>\n                    <ContactList items={filteredContacts} removeContact={onRemoveContact} />\n                </>\n            }\n            {!loading && contacts.length === 0 && <p><b>Your contacts list is empty</b></p>}  \n        </>\n    )\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","contacts","items","selectState","loading","error","selectNumberOfContacts","selectFilter","store","filter","FormBtn","styled","LabelText","Input","Form","onSubmit","useState","setName","number","setNumber","nameId","nanoid","numberId","handleChange","e","target","preventDefault","type","id","onChange","pattern","title","required","List","ListItem","ContactList","removeContact","elements","onClick","Filter","MainTitle","SecondTitle","LoaderContainer","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","ContactsPage","useSelector","contactsCount","dispatch","useDispatch","useEffect","fetchContacts","filteredContacts","normalizedFilter","toLocaleLowerCase","includes","selectFilteredContacts","contact","action","addContact","setFilter","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}